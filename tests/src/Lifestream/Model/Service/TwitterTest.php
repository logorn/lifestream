<?php

namespace Lifestream\Model\Service;

/**
 * Test class for Twitter.
 * Generated by PHPUnit on 2011-04-17 at 22:35:44.
 */
class TwitterTest extends \PHPUnit_Framework_TestCase
{

    protected $status;
    protected $serviceStream;
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new clientTwitterTest();
        $this->object->setUsername('lyrixx');
    }

    public function testGetServiceURL()
    {
        $this->assertEquals('https://twitter.com/lyrixx', $this->object->getServiceURL());
    }

    /**
     * Test if stream is empty if ->processStream Is not run
     */
    public function testGetEmptyStream()
    {
        $this->assertEquals(array(), $this->object->getStream(), 'Check if ->getStream return empty array if process not run');
    }


    /**
     * Check exception if feed processor is not defined
     */
    public function testProcessStreamException()
    {
        $this->setExpectedException('Exception');

        $this->object = new Twitter($this->serviceStream, 'lyrixx');

        $this->object->processFeed();
    }

    public function testGetStream()
    {
        $this->object->processFeed();
        $stream = $this->object->getStream();
        $this->assertEquals(3, count($stream), 'Check if all status are present');
        $firstStatus = $stream[0];

        $this->assertEquals('First Tweet', $firstStatus->text);
        $this->assertEquals('http://twitter.com/lyrixx/statuses/1', $firstStatus->url);
        $this->assertEquals('Mon, 25 Jul 2011 18:30:05 +0000', $firstStatus->date);
        $this->assertEquals(array('categories'=>array()), $firstStatus->options);
    }

    public function testGetStreamWithMaxItems()
    {
        $this->object->processFeed();

        $this->assertEquals(3, count($this->object->getStream(-1)), 'Check if all status are present');
        $this->assertEquals(2, count($this->object->getStream(2)), 'Check if all status are present');
    }

}

class clientTwitterTest extends Twitter
{
    public function requestRawDatas($maxItem = -1)
    {
        $this->rawDatas = array(
            array(
                'text' => 'lyrixx: First Tweet',
                'url' => 'http://twitter.com/lyrixx/statuses/1',
                'date' => 'Mon, 25 Jul 2011 18:30:05 +0000',
                'categories' => array(),
            ),
            array(
                'text' => 'lyrixx: Second Tweet',
                'url' => 'http://twitter.com/lyrixx/statuses/2',
                'date' => 'Mon, 25 Jul 2011 18:30:05 +0000',
                'categories' => array(),
            ),
            array(
                'text' => 'lyrixx: Third Tweet',
                'url' => 'http://twitter.com/lyrixx/statuses/3',
                'date' => 'Mon, 25 Jul 2011 18:30:05 +0000',
                'categories' => array(),
            ),
        );
    }
}
